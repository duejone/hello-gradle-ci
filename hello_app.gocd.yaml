---
format_version: 10
common:
  deploy-tasks: &deploy-tasks
    - exec:
        command: bash
        arguments:
          - -c
          - echo "Deployment of hello-app on $ENV_NAME is starting.."
    - exec:
        command: bash
        arguments:
          - -c
          - kubectl set image deployment hello-app-$ENV_NAME hello-app-$ENV_NAME-pod=mtararujs/hello-app:latest
  test-tasks: &test-tasks
    - exec:
        command: bash
        arguments:
          - -c
          - echo "Testing of hello-app on $ENV_NAME is starting.."
    - exec:
        command: bash
        arguments:
          - -c
          - docker run --network=host -d -t --name api_test_executor_$ENV_NAME mtararujs/ubuntu_ruby_executor:latest
    - exec:
        command: bash
        arguments:
          - -c
          - docker exec api_test_executor_$ENV_NAME cucumber PLATFORM=$ENV_NAME --format html --out test-output/report.html
    - exec:
        command: bash
        arguments:
          - -c
          - docker cp api_test_executor_$ENV_NAME:/usr/src/api-tests/test-output/report.html report_$ENV_NAME.html
    - exec:
        command: bash
        arguments:
          - -c
          - docker rm -f api_test_executor_$ENV_NAME

pipelines:
  hello-app:
    group: java-spring-apps
    materials:
      mygit:
        git: https://github.com/mtararujs/hello-gradle-ci.git
        branch: main
    stages:
      - build-app:
          jobs:
            build-app:
              tasks:
                - exec:
                    command: echo
                    arguments:
                      - "Building hello-app..."
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker build -t mtararujs/hello-app:latest .
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker push mtararujs/hello-app:latest
      - deploy-dev:
          environment_variables:
            ENV_NAME: dev
          jobs:
            deploy-dev:
              tasks: *deploy-tasks
      - test-dev:
          environment_variables:
            ENV_NAME: dev
          jobs:
            test-dev:
              tasks: *test-tasks
      - deploy-prd:
          environment_variables:
            ENV_NAME: prd
          jobs:
            deploy-dev:
              tasks: *deploy-tasks
      - test-prd:
          environment_variables:
            ENV_NAME: prd
          jobs:
            test-dev:
              tasks: *test-tasks